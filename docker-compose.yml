#
# Third-party
#

kafka:
   image: spotify/kafka
   container_name: kafka
   environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092
   hostname: kafka

es:
   image: elasticsearch:2.0
   container_name: es
   ports:
      - "9200:9200"

redis:
    image: redis
    container_name: redis
    hostname: redis
    ports:
        - "6379:6379"

haproxy:
    image: haproxy
    container_name: haproxy
    links:
        - web
    environment:
        WEBSERVER: web:8000
    ports:
        - "8000:80"

spark-master:
  image: spark
  command: bin/spark-class org.apache.spark.deploy.master.Master -h spark-master
  container_name: spark-master
  hostname: spark-master
  environment:
    MASTER: spark://spark-master:7077
    SPARK_CONF_DIR: /conf
  expose:
    - 7001
    - 7002
    - 7003
    - 7004
    - 7005
    - 7006
    - 7077
    - 6066
  ports:
    - 4040:4040
    - 6066:6066
    - 7077:7077
    - 8080:8080
  volumes:
    - ./spark/data:/tmp/data

spark-worker:
  image: spark
  command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
  container_name: spark-worker
  hostname: spark-worker
  environment:
    SPARK_CONF_DIR: /conf
    SPARK_WORKER_CORES: 2
    SPARK_WORKER_MEMORY: 512m
    SPARK_WORKER_PORT: 8881
    SPARK_WORKER_WEBUI_PORT: 8081
  links:
    - spark-master
  expose:
    - 7012
    - 7013
    - 7014
    - 7015
    - 7016
    - 8881
  ports:
    - 8081:8081
  volumes:
    - ./spark/data:/tmp/data

#
# First-party
#

models:
   image: djangorest
   external_links:
      - mysql:db
   ports:
      - "8001:8000"
   volumes:
      - ./models:/app
   stdin_open: true
   command: bash -c "python manage.py collectstatic --noinput > /dev/null && python manage.py makemigrations models_app && python manage.py migrate && python manage.py loaddata db.json && mod_wsgi-express start-server --working-directory . --url-alias /static build/static --reload-on-changes --log-to-terminal models/wsgi.py"

exp:
   image: djangorest
   links:
      - models:models-api
      - kafka:kafka-api
      - es:es-api
   ports:
      - "8002:8000"
   volumes:
      - ./exp:/app
   stdin_open: true
   command: "mod_wsgi-express start-server --working-directory . --reload-on-changes --log-to-terminal exp/wsgi.py"

web:
   image: djangorest
   links:
      - exp:exp-api
      - redis:redis
   ports:
      - "8003:8000"
   volumes:
      - ./web:/app
   stdin_open: true
   command: bash -c "python manage.py collectstatic --noinput > /dev/null && mod_wsgi-express start-server --working-directory . --document-root build --reload-on-changes --log-to-terminal web/wsgi.py"

batch:
   image: tp33/django
   container_name: batch
   volumes:
      - ./batch:/app
      - ./models:/data
   links:
      - kafka:kafka
      - es:es
   command: bash -c "python search.py es kafka"
